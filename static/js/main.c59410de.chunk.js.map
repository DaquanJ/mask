{"version":3,"sources":["lib/utils.js","components/ChartData.jsx","components/LiveData.jsx","components/Home.jsx","components/country.jsx","components/countries.jsx","components/Nav.jsx","App.js","reportWebVitals.js","index.js"],"names":["modifiedData","data","point","chart","date","cases","newPoint","deaths","recovered","push","ChartData","useState","historicalData","setHistoricalData","lastDays","days","setDays","getData","a","axios","get","res","newChart","console","error","event","preventDefault","useEffect","className","onChange","e","target","id","value","handleChange","onSubmit","handleSubmit","type","placeholder","length","labels","map","datasets","label","borderColor","fill","backgroundColor","options","scales","xAxes","time","parser","tooltipFormat","LiveData","setData","fetchData","numeral","todayCases","format","todayDeaths","todayRecovered","Home","Country","match","liveData","setLiveData","chartData","setChartData","params","country","getChartData","newData","timeline","getLiveData","Countries","countries","setCountries","getCountries","to","Nav","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c59410de.chunk.js","sourcesContent":["// utility function to modify data from disease.sh api to be properly mapped to chart\n\nexport function modifiedData(data) {\n    let chart = [];\n    let point;\n\n    for (let date in data.cases) {\n        if (point) {\n            let newPoint = {\n                date: date,\n                cases: data.cases[date],\n                deaths: data.deaths[date],\n                recovered: data.recovered[date],\n            };\n            chart.push(newPoint);\n        }\n        point = data\n    }\n\n    return chart;\n}\n","import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { modifiedData } from '../lib/utils.js';\nimport axios from 'axios';\n\nimport '../styles/ChartData.css'\n\nconst ChartData = () => {\n\n    const [historicalData, setHistoricalData] = useState([]);\n    const [days, setDays] = useState({ lastDays: '365' });\n\n\n    async function getData() {\n        try {\n            const res = await axios.get(`https://disease.sh/v3/covid-19/historical/all?lastdays=${days.lastDays}`)\n            const newChart = modifiedData(res.data)\n            setHistoricalData(newChart);\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    useEffect(() => {\n        getData();\n    }, [])\n\n    function handleChange(e) {\n        const { id, value } = e.target;\n        setDays({ [id]: value })\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault()\n        getData();\n    }\n\n\n\n    return (\n        <div className='chart' >\n            <form className='view' onChange={(e) => handleChange(e)} onSubmit={(event) => handleSubmit(event)} >\n                <p> World Wide </p>\n                <input type=\"text\" id='lastDays' placeholder='Choose number of Days' />\n                <input type=\"submit\" value={`View last ${days.lastDays} days`} />\n            </form>\n\n            {historicalData.length > 0 ?\n\n                <Line\n                    data={{\n                        labels: historicalData.map(({ date }) => date),\n                        datasets: [\n                            {\n                                label: 'Cases',\n                                data: historicalData.map(({ cases }) => cases),\n                                borderColor: '#3333ff',\n                                fill: true,\n                            },\n                            {\n                                label: 'Deaths',\n                                data: historicalData.map(({ deaths }) => deaths),\n                                fill: true,\n                                backgroundColor: 'rgba(255,0,0,0.5)',\n                                borderColor: 'red',\n                            },\n                            {\n                                label: 'Recovered',\n                                data: historicalData.map(({ recovered }) => recovered),\n                                fill: true,\n                                backgroundColor: 'rgb(0,191,255, 0.5)',\n                                borderColor: 'rgb(65,105,225)',\n                            },\n\n                        ],\n                    }}\n\n                    options={{\n                        scales: {\n                            xAxes: [\n                                {\n                                    type: \"time\",\n                                    time: {\n                                        parser: \"MM/DD/YY\",\n                                        tooltipFormat: \"ll\",\n                                    },\n                                },\n                            ]\n                        }\n                    }}\n                />\n                : <p id='not-found' > ...  </p>\n            }\n\n        </div>\n\n\n    );\n}\n\nexport default ChartData;","import axios from 'axios';\nimport numeral from 'numeral';\nimport React, { useState, useEffect } from 'react';\n\nimport '../styles/liveData.css';\n\nconst LiveData = () => {\n\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const res = await axios.get('https://disease.sh/v3/covid-19/all')\n                setData(res.data)\n            } catch (e) {\n                console.error(e)\n            }\n        }\n        fetchData();\n    }, [])\n\n    return (\n        <div>\n            {\n\n                <div className='cards' >\n                    <div className='cases' >\n                        <p> Cases </p>\n                        <h2 id='cases' > {numeral(data.todayCases).format('+0.0a')} </h2>\n                        <p> {numeral(data.cases).format('0.0a')} Total </p>\n                    </div>\n                    <div className='deaths' >\n                        <p> Deaths </p>\n                        <h2 id='deaths'> {numeral(data.todayDeaths).format('+0.0a')} </h2>\n                        <p>  {numeral(data.deaths).format('0.0a')} Total </p>\n                    </div>\n                    <div className='recovered' >\n                        <p> Recovered </p>\n                        <h2 id='recovered' > {numeral(data.todayRecovered).format('+0.0a')} </h2>\n                        <p> {numeral(data.recovered).format('0.0a')} Total </p>\n                    </div>\n\n                </div>\n\n\n            }\n        </div>\n    )\n}\n\nexport default LiveData;","import React from 'react';\n\nimport '../styles/Home.css';\n\nimport ChartData from './ChartData';\nimport LiveData from './LiveData';\n\nconst Home = () => {\n    return (\n        <div className='Home'>\n            <LiveData />\n            <ChartData />\n        </div>\n    );\n}\n\nexport default Home;","import axios from 'axios';\nimport numeral from 'numeral';\nimport React, { useState, useEffect } from 'react';\n\nimport { modifiedData } from '../lib/utils.js';\nimport { Line } from 'react-chartjs-2';\n\nimport '../styles/ChartData.css'\n\nconst Country = ({ match }) => {\n\n    const [liveData, setLiveData] = useState([])\n    const [chartData, setChartData] = useState([])\n    const [days, setDays] = useState({ lastDays: '365' });\n\n\n    async function getLiveData() {\n        try {\n            const res = await axios.get(`https://disease.sh/v3/covid-19/countries/${match.params.country}?strict=true`)\n            setLiveData(res.data)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    async function getChartData() {\n        try {\n            const res = await axios.get(`https://disease.sh/v3/covid-19/historical/${match.params.country}?lastdays=${days.lastDays}`)\n            const newData = modifiedData(res.data.timeline)\n            setChartData(newData)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    useEffect(() => {\n        getLiveData();\n        getChartData();\n    }, [match.params.country])\n\n\n    function handleChange(e) {\n        const { id, value } = e.target;\n        setDays({ [id]: value })\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault()\n        getChartData();\n    }\n\n\n    return (\n        <div>\n\n            {/* LIVE DATA */}\n\n            {\n\n                <div className='cards' >\n                    <div className='cases' >\n                        <p> Cases </p>\n                        <h2 id='cases' > {numeral(liveData.todayCases).format('+0,0')} </h2>\n                        <p> {numeral(liveData.cases).format('0,0')} Total </p>\n                    </div>\n                    <div className='deaths' >\n                        <p> Deaths </p>\n                        <h2 id='deaths'>  {numeral(liveData.todayDeaths).format('+0,0')} </h2>\n                        <p> {numeral(liveData.deaths).format('0,0')} Total </p>\n                    </div>\n                    <div className='recovered' >\n                        <p> Recovered </p>\n                        <h2 id='recovered' > {numeral(liveData.todayRecovered).format('+0,0')} </h2>\n                        <p> {numeral(liveData.recovered).format('0,0')} Total </p>\n                    </div>\n\n                </div>\n\n\n            }\n\n            {/* CHART DATA */}\n\n            <div className='chart' >\n                <form className='view' onChange={(e) => handleChange(e)} onSubmit={(event) => handleSubmit(event)} >\n                    <p> {liveData.country} </p>\n                    <input type=\"text\" id='lastDays' placeholder='Choose number of Days' />\n                    <input type=\"submit\" value={`View last ${days.lastDays} days`} />\n                </form>\n\n                {\n                    chartData.length > 0 ?\n                        <Line\n                            data={{\n                                labels: chartData.map(({ date }) => date),\n                                datasets: [\n                                    {\n                                        label: 'Cases',\n                                        data: chartData.map(({ cases }) => cases),\n                                        borderColor: '#3333ff',\n                                        fill: true,\n                                    },\n                                    {\n                                        label: 'Deaths',\n                                        data: chartData.map(({ deaths }) => deaths),\n                                        fill: true,\n                                        backgroundColor: 'rgba(255,0,0,0.5)',\n                                        borderColor: 'red',\n                                    },\n                                    {\n                                        label: 'Recovered',\n                                        data: chartData.map(({ recovered }) => recovered),\n                                        fill: true,\n                                        backgroundColor: 'rgb(0,191,255, 0.5)',\n                                        borderColor: 'rgb(65,105,225)',\n                                    },\n\n                                ],\n                            }}\n\n                            options={{\n                                scales: {\n                                    xAxes: [\n                                        {\n                                            type: \"time\",\n                                            time: {\n                                                parser: \"MM/DD/YY\",\n                                                tooltipFormat: \"ll\",\n                                            },\n                                        },\n                                    ]\n                                }\n                            }}\n                        />\n                        : <p id='not-found'> Historical Data Not Found  </p >\n                }\n\n            </div>\n\n        </div>\n    );\n}\n\nexport default Country;","import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\n\nimport '../styles/countries.css';\n\nimport { Link } from 'react-router-dom';\n\nconst Countries = () => {\n\n    const [countries, setCountries] = useState([]);\n\n    async function getCountries() {\n        try {\n            const res = await axios.get('https://disease.sh/v3/covid-19/countries')\n            setCountries(res.data)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    useEffect(() => {\n        getCountries()\n    }, [])\n\n    return (\n        <div className='countries'>\n            <Link to='/' >  <button className='country-btn' > World Wide ▼ </button> </Link>\n            <div id='country' >\n                {\n                    countries.map(country =>\n                        <Link key={country.country} id='country-link' to={`/${country.country}`}> <li> {country.country} </li>  </Link>\n                    )\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Countries;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Countries from '../components/countries';\nimport '../styles/Home.css';\n\nconst Nav = () => {\n    return (\n        <div className='header'>\n            <Link id='header-link' to='/'> <h1> Mask </h1> </Link>\n            <Countries />\n        </div>\n    );\n}\n\nexport default Nav;","import './App.css';\n\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport Country from './components/country';\nimport Nav from './components/Nav';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Router>\n        <Nav />\n        <Switch >\n          <Route exact path='/' component={Home} />\n          <Route path='/:country' component={Country} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}